{"version":3,"sources":["store.js","api/todos.js","api/users.js","api/allData.js","components/User.js","components/TodoList.js","App.js","index.js"],"names":["initialState","todos","isLoading","hasError","sortType","isReversed","getTodos","state","getLoading","getSortType","getError","getIsReversed","store","createStore","arguments","length","undefined","action","type","Object","objectSpread2","todosPromise","response","result","regenerator_default","a","async","_context","prev","next","awrap","fetch","sent","json","abrupt","stop","usersPromise","allData","_ref","_ref2","allDataTodos","allUsersData","Promise","all","slicedToArray","map","todo","user","find","id","userId","User","react_default","createElement","name","connect","dispatch","setSortType","sortTypeValue","setReversed","val","visibleTodos","sortTodos","reverse","toConsumableArray","sort","b","localeCompare","onClick","title","completed","key","components_User","start","success","handleSuccess","error","className","components_TodoList","preparedData","getDataFromServer","t0","loadData","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.497e7c2d.chunk.js","sourcesContent":["import { createStore } from 'redux';\n\nconst initialState = {\n  todos: [],\n  isLoading: false,\n  hasError: false,\n  sortType: '',\n  isReversed: false,\n};\n\n// action types\nconst START_LOADING = 'START_LOADING';\nconst HANDLE_SUCCESS = 'HANDLE_SUCCESS';\nconst HANDLE_SORT_TYPE = 'HANDLE_SORT_TYPE';\nconst HANDLE_ERROR = 'HANDLE_ERROR';\nconst IS_REVERSED = 'IS_REVERSED';\n\n// action creators\nexport const startLoading = () => ({ type: START_LOADING });\nexport const handleSuccess = todos => (\n  {\n    type: HANDLE_SUCCESS, todos,\n  }\n);\nexport const handleSortType = sortType => (\n  {\n    type: HANDLE_SORT_TYPE, sortType,\n  }\n);\nexport const handleError = () => ({ type: HANDLE_ERROR });\nexport const handleIsReversed = isReversed => (\n  {\n    type: IS_REVERSED, isReversed,\n  }\n);\n\n// selectors\nexport const getTodos = state => state.todos;\nexport const getLoading = state => state.isLoading;\nexport const getSortType = state => state.sortType;\nexport const getError = state => state.hasError;\nexport const getIsReversed = state => state.isReversed;\n\n// reducer\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case START_LOADING:\n      return {\n        ...state,\n        isLoading: true,\n        hasError: false,\n      };\n\n    case HANDLE_SUCCESS:\n      return {\n        ...state,\n        todos: action.todos,\n        isLoading: false,\n        hasError: false,\n      };\n\n    case HANDLE_ERROR:\n      return {\n        ...state,\n        isLoading: false,\n        hasError: true,\n      };\n\n    case HANDLE_SORT_TYPE:\n      return {\n        ...state,\n        sortType: action.sortType,\n        isLoading: false,\n        hasError: false,\n      };\n\n    case IS_REVERSED:\n      return {\n        ...state,\n        isReversed: action.isReversed,\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(reducer, initialState);\n\nexport default store;\n","export const todosPromise = async() => {\n  const response = await fetch('https://jsonplaceholder.typicode.com/todos');\n  const result = await response.json();\n\n  return result;\n};\n","export const usersPromise = async() => {\n  const response = await fetch('https://jsonplaceholder.typicode.com/users');\n  const result = await response.json();\n\n  return result;\n};\n","import { todosPromise } from './todos';\nimport { usersPromise } from './users';\n\nexport default async() => {\n  const [allDataTodos, allUsersData] = (\n    await Promise.all([todosPromise(), usersPromise()])\n  );\n\n  return allDataTodos.map(todo => ({\n    ...todo,\n    user: allUsersData.find(user => user.id === todo.userId),\n  }));\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst User = ({ user }) => (\n  <td>{user.name}</td>\n);\n\nUser.propTypes = { user: PropTypes.objectOf(PropTypes.any).isRequired };\n\nexport default User;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport User from './User';\n\nimport {\n  handleSortType,\n  handleIsReversed,\n\n  getIsReversed,\n  getTodos,\n  getSortType,\n} from '../store';\n\nconst TodoList = (\n  {\n    todos, sortType, setSortType,\n    isReversed, setReversed,\n  }\n) => {\n  let visibleTodos = todos;\n\n  const sortTodos = (type) => {\n    setSortType(type);\n\n    isReversed === true\n      ? setReversed(false)\n      : setReversed(true);\n  };\n\n  if (isReversed) {\n    visibleTodos = visibleTodos.reverse();\n  } else {\n    switch (sortType) {\n      case 'id':\n      case 'completed':\n        visibleTodos = [...todos]\n          .sort((a, b) => a[sortType] - b[sortType]);\n        break;\n      case 'title':\n        visibleTodos = [...todos]\n          .sort((a, b) => a[sortType].localeCompare(b[sortType]));\n        break;\n      case 'user':\n        visibleTodos = [...todos]\n          .sort((a, b) => a[sortType].name.localeCompare(b[sortType].name));\n        break;\n      default:\n    }\n    setReversed(false);\n  }\n\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th\n            onClick={() => sortTodos('id')}\n          >\n            #id\n          </th>\n          <th\n            onClick={() => sortTodos('user')}\n          >\n              user name\n          </th>\n          <th\n            onClick={() => sortTodos('title')}\n          >\n            what need to be done\n          </th>\n          <th\n            onClick={() => sortTodos('completed')}\n          >\n            completed or no\n          </th>\n        </tr>\n      </thead>\n      <tbody>\n        { visibleTodos.map(({ id, user, title, completed }) => (\n          <tr key={id}>\n            <td>{id}</td>\n            <User user={user} />\n            <td>{title}</td>\n            <td>{completed ? '✅' : '❌'}</td>\n          </tr>\n        )) }\n      </tbody>\n    </table>\n  );\n};\n\nconst mapStateToProps = state => ({\n  todos: getTodos(state),\n  sortType: getSortType(state),\n  isReversed: getIsReversed(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setSortType: sortTypeValue => dispatch(handleSortType(sortTypeValue)),\n  setReversed: val => dispatch(handleIsReversed(val)),\n});\n\nexport default connect(\n  mapStateToProps, mapDispatchToProps\n)(TodoList);\n\nTodoList.propTypes = {\n  sortType: PropTypes.string.isRequired,\n  setSortType: PropTypes.func.isRequired,\n  isReversed: PropTypes.bool.isRequired,\n  setReversed: PropTypes.func.isRequired,\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n","\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport getDataFromServer from './api/allData';\nimport {\n  startLoading,\n  handleSuccess,\n  handleError,\n\n  getTodos,\n  getLoading,\n  getError,\n} from './store';\nimport TodoList from './components/TodoList';\n\nconst App = (\n  {\n    todos, isLoading, hasError,\n    start, success, error,\n  }\n) => {\n  const loadData = async() => {\n    start();\n\n    try {\n      const preparedData = await getDataFromServer();\n\n      success(preparedData);\n    } catch (e) {\n      error();\n    }\n  };\n\n  if (hasError) {\n    return (\n      <p>\n        you have some problems with your network,\n        <br />\n        please refresh the page\n      </p>\n    );\n  }\n\n  if (!todos.length) {\n    return (\n      <button\n        type=\"button\"\n        onClick={\n          () => loadData()\n        }\n      >\n        {isLoading ? 'Loading...' : 'Load'}\n      </button>\n    );\n  }\n\n  return (\n    <div className=\"App\">\n      <TodoList />\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  todos: getTodos(state),\n  isLoading: getLoading(state),\n  hasError: getError(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  start: () => dispatch(startLoading()),\n  success: todos => dispatch(handleSuccess(todos)),\n  error: () => dispatch(handleError()),\n});\n\nApp.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  hasError: PropTypes.bool.isRequired,\n  start: PropTypes.func.isRequired,\n  success: PropTypes.func.isRequired,\n  error: PropTypes.func.isRequired,\n};\n\nexport default connect(\n  mapStateToProps, mapDispatchToProps\n)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}